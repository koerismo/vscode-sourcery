body, html {
	width: 100vw;
	height: 100vh;
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	padding: 10px;
	flex-direction: row;
	display: flex;
	justify-content: stretch;
	gap: 10px;
}

input {
	box-sizing: border-box;
	background-color: var(--vscode-input-background);
	outline-color: var(--vscode-inputOption-activeBorder);
	color: var(--vscode-input-foreground);
	border: 1px solid var(--vscode-input-border);
}

input:focus {
	background-color: var(--vscode-input-background);
	outline: 1px solid var(--vscode-foreground);
	outline-color: var(--vscode-list-focusOutline);
}

/* =================================== BASE LAYOUT =================================== */

h2 {
	height: 14px;
	color: var(--vscode-panelSectionHeader-foreground);
	cursor: default;
	text-transform: uppercase;
    font-size: 11px;
    font-weight: 400;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

	background-color: var(--vscode-sideBar-background);
	padding: 10px;
	margin: 0px;

	/* Prevent shrinking. Maybe this is not a good idea? */
	flex-shrink: 0;
}

.panel {
	display: flex;
	flex-direction: column;

	position: relative;
	border: 1px solid var(--vscode-panel-border);
	background-color: var(--vscode-editorPane-background);
}

.h {
	display: flex;
	flex-direction: row;
	justify-content: stretch;
	gap: 10px;
}

.v {
	display: flex;
	flex-direction: column;
	justify-content: stretch;
	gap: 10px;
}

.v > .fill { height: 100% }
.h > .fill { width: 100% }
tr > .fill { width: 100% }

div.small-v {
	height: max(min(160px, 20vmin), 80px);
	/* flex-shrink: 0;
	flex-grow: 0; */
}

div.small-h {
	width: max(min(160px, 100vw), 300px);
	/* flex-shrink: 0;
	flex-grow: 0; */
}

button.square {
	background-color: transparent;
	border: none;
	margin: 0;
	padding: 9px;
	color: var(--vscode-icon-foreground);
	cursor: pointer;
}

button.square:hover {
	background-color: var(--vscode-button-secondaryBackground);
	color: var(--vscode-button-secondaryForeground);
}

button.bordered {
	border: 1px solid var(--vscode-panel-border);
}

/* =================================== TABLE =================================== */

table.edit-table {
	text-align: left;
	border: none;
	border-collapse: collapse;

    overflow-y: scroll;
    display: flex;
    scrollbar-width: thin;
}

table.edit-table tbody {
	display: table;
	width: 100%;
}

table.edit-table tr {
	position: relative;
}

table.edit-table tr.header {
	position: sticky;
    top: 0;
    z-index: 10;
    background-color: var(--vscode-panel-background);
}

table.edit-table tr::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 10;
}

table.edit-table tr.active::after {
	z-index: -10;
}

table.edit-table tr:hover {
	background-color: var(--vscode-list-hoverBackground);
}

table.edit-table tr.active {
	background-color: var(--vscode-list-activeSelectionBackground);
}

table.edit-table td {
	padding: 0px 5px;
}

table.edit-table th {
	padding: 5px 10px;
}

table.edit-table tr.active td > input {
	color: var(--vscode-list-activeSelectionForeground);
}

table.edit-table td > input {
	padding: 5px;
	background-color: transparent;
	border: none;
	outline: 1px solid transparent;
	color: var(--vscode-foreground);
}

table.edit-table td > input:focus {
	background-color: var(--vscode-input-background);
	outline: 1px solid var(--vscode-foreground);
	outline-color: var(--vscode-list-focusOutline);
}

@media screen and (max-height: 600px) {
	table.edit-table {
		line-height: 7px;
		font-size: 0.9em;
	}
	table.edit-table td > input {
		padding: 3px 5px;
	}
}

div.panel:has(table.edit-table[disabled]),
div.panel.disabled {
	opacity: 0.5;
}

div.panel:has(table.edit-table[disabled])::after,
div.panel.disabled::after {
	content: '';
	z-index: 2;
	position: absolute;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
}

/* =================================== INPUT WIDTHS =================================== */

input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
	-webkit-appearance: none; 
	margin: 0;
}

input {
	width: 100%;
}

input[type=number] {
	width: 60px;
}


/* =================================== SPECIAL =================================== */


div.btn-container {
	position: absolute;
	right: 0;
	top: 0;
}

/* button.btn-list-add,
button.btn-list-remove {
	margin: 0;
	border: none;
	padding: 9px;
	color: var(--vscode-icon-foreground);
	cursor: pointer;
}

button.btn-list-add:hover,
button.btn-list-remove:hover {
	background-color: var(--vscode-button-secondaryBackground);
	color: var(--vscode-button-secondaryForeground);
} */

div.panel:has(table.edit-table[disabled]) div.btn-container div {
	cursor: default;
	opacity: 0.5;
}

div.panel:has(table.edit-table[disabled]) div.btn-container div:hover {
	background-color: inherit;
	color: inherit;
}

.edit-icon {
	width: 52px;
	height: 52px;
	background-color: transparent;
	border: 1px solid var(--vscode-panel-border);
	border-radius: 2px;
	cursor: pointer;
}

.edit-icon:hover {
	border-color: var(--vscode-list-focusOutline);
}

div.prop-grid {
	padding: 5px 10px;
	display: grid;
	gap: 5px;
	grid-template-columns: auto auto;
	grid-auto-rows: max(26px, auto);
	line-height: 22px;
	white-space: nowrap;
}

div.prop-grid input {
	width: 100%;
}

div.prop-grid vscode-dropdown {
	width: 100%;
}

div.prop-grid .content {
	display: contents;
}

div.prop-grid .h { gap: 4px }
div.prop-grid .v { gap: 4px }


/* =================================== BOUND EDITOR =================================== */


bound-editor {
	position: absolute;
	width: 50vw;
	height: 98vh;
	left: 1vh;
	top: 1vh;
	
	background-color: var(--vscode-sideBar-background);
	border: 1px solid #555;
	box-shadow: 3px 3px 30px #0005;
	
	display: flex;
	z-index: -99;
	opacity: 0;
	/* display: none; */
	flex-direction: column;

	/* Transition */
	transform: scale(0.95);
	transition: transform ease-out 0.1s;
}

bound-editor #bound-header {
	display: flex;
	justify-content: space-between;
	gap: 2px;
	margin: 2px;
}

bound-editor main {
	display: flex;
	flex-direction: row;
	height: 100%;
	overflow: hidden;
}

bound-editor.fit-with-height main {
	flex-direction: column;
}

bound-editor.active {
	display: flex;
	transform: scale(1.0);
	z-index: 99;
	opacity: 1;
}

bound-editor #bound-image {
	position: relative;
	box-sizing: border-box;
	margin: 20px;
}

bound-editor #bound-image img {
	background: #0002; 
	position: absolute;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
	width: 100%;
	height: 100%;

	-webkit-user-drag: none;
    user-select: none;
}

bound-editor #bound-ghost-layer {
	opacity: 0.1;
}

bound-editor #bound-ghost-layer span {
	position: absolute;
	display: block;
	border: 1px solid var(--vscode-foreground);
}

bound-editor #bound-box-layer span {
	position: absolute;
	display: block;
	border: 1px solid var(--vscode-foreground);
}

bound-editor.bigsnap #bound-box-layer span {
	transition: all 0.08s cubic-bezier(0.13, 0.71, 0.6, 0.98) 0s;
}

bound-editor #bound-box-layer span::before {
    display: block;
    position: absolute;
	content: '';
    width: 10px;
    height: 10px;
    border-bottom: 1px solid var(--vscode-foreground);
    border-right: 1px solid var(--vscode-foreground);
    top: -10.5px;
    left: -10.5px;
}

bound-editor #bound-box-layer span::after {
    display: block;
    position: absolute;
	content: '';
    width: 10px;
    height: 10px;
    border-top: 1px solid var(--vscode-foreground);
    border-left: 1px solid var(--vscode-foreground);
    bottom: -10.5px;
    right: -10.5px;
}

edit-detail-prop {
	display: contents;
}

/* =================================== VIEWPORT =================================== */

canvas#viewport {
	background: #000;
	width: 100% !important;
	height: 100% !important;
}

div#viewport-options button {
	aspect-ratio: 1/1;
	height: auto;
	color: var(--vscode-panel-border);
	border: 1px solid currentColor;
	cursor: pointer;
	opacity: 1.0;
}

div#viewport-options button#btn-viewport-flat0 { background-color: transparent; }
div#viewport-options button#btn-viewport-flat1 { background-color: currentColor }
div#viewport-options button#btn-viewport-line     { background: linear-gradient(-45deg, currentColor 50%, transparent 50%) }
div#viewport-options button#btn-viewport-gradient { background: linear-gradient(-45deg, currentColor 35%, transparent 65%) }

div#viewport-options button:hover {
	opacity: 0.8;
}


div#viewport-options button.active {
	opacity: 1.0;
	color: var(--vscode-foreground);
	cursor: default;
}
